//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_Escuela
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EscuelaEntities : DbContext
    {
        public EscuelaEntities()
            : base("name=EscuelaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Admins> Admins { get; set; }
        public virtual DbSet<Alumnos> Alumnos { get; set; }
        public virtual DbSet<Alumnos_Grupos> Alumnos_Grupos { get; set; }
        public virtual DbSet<Calificaciones> Calificaciones { get; set; }
        public virtual DbSet<Grupos> Grupos { get; set; }
        public virtual DbSet<Horarios> Horarios { get; set; }
        public virtual DbSet<Materias> Materias { get; set; }
        public virtual DbSet<Profesores> Profesores { get; set; }
        public virtual DbSet<Rectores> Rectores { get; set; }
        public virtual DbSet<Roles> Roles { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Usuarios> Usuarios { get; set; }
        public virtual DbSet<mostrarUsuarios> mostrarUsuarios { get; set; }
        public virtual DbSet<view_AlumnosGrupos> view_AlumnosGrupos { get; set; }
    
        public virtual int mostrarGrupos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("mostrarGrupos");
        }
    
        public virtual ObjectResult<sp_Admin_sel_Result> sp_Admin_sel(Nullable<int> iD_Admin, string nombre)
        {
            var iD_AdminParameter = iD_Admin.HasValue ?
                new ObjectParameter("ID_Admin", iD_Admin) :
                new ObjectParameter("ID_Admin", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Admin_sel_Result>("sp_Admin_sel", iD_AdminParameter, nombreParameter);
        }
    
        public virtual int sp_Admins_del(Nullable<int> iD_Admin)
        {
            var iD_AdminParameter = iD_Admin.HasValue ?
                new ObjectParameter("ID_Admin", iD_Admin) :
                new ObjectParameter("ID_Admin", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admins_del", iD_AdminParameter);
        }
    
        public virtual int sp_Admins_update(Nullable<int> iD_Admin, string nombre, string apellido)
        {
            var iD_AdminParameter = iD_Admin.HasValue ?
                new ObjectParameter("ID_Admin", iD_Admin) :
                new ObjectParameter("ID_Admin", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Admins_update", iD_AdminParameter, nombreParameter, apellidoParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual ObjectResult<sp_Alumno_sel_Result> sp_Alumno_sel(Nullable<int> iD_Alumno, string nombre)
        {
            var iD_AlumnoParameter = iD_Alumno.HasValue ?
                new ObjectParameter("ID_Alumno", iD_Alumno) :
                new ObjectParameter("ID_Alumno", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Alumno_sel_Result>("sp_Alumno_sel", iD_AlumnoParameter, nombreParameter);
        }
    
        public virtual int sp_Alumno_update(Nullable<int> iD_Alumno, string nombre, string apellido, Nullable<System.DateTime> fecha_Nacimiento, string matricula)
        {
            var iD_AlumnoParameter = iD_Alumno.HasValue ?
                new ObjectParameter("ID_Alumno", iD_Alumno) :
                new ObjectParameter("ID_Alumno", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var fecha_NacimientoParameter = fecha_Nacimiento.HasValue ?
                new ObjectParameter("Fecha_Nacimiento", fecha_Nacimiento) :
                new ObjectParameter("Fecha_Nacimiento", typeof(System.DateTime));
    
            var matriculaParameter = matricula != null ?
                new ObjectParameter("Matricula", matricula) :
                new ObjectParameter("Matricula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Alumno_update", iD_AlumnoParameter, nombreParameter, apellidoParameter, fecha_NacimientoParameter, matriculaParameter);
        }
    
        public virtual ObjectResult<sp_AlumnoGrupo_sel_Result> sp_AlumnoGrupo_sel(Nullable<int> iD_AlumnosGrupo, Nullable<int> alumno_ID, Nullable<int> grupo_ID)
        {
            var iD_AlumnosGrupoParameter = iD_AlumnosGrupo.HasValue ?
                new ObjectParameter("ID_AlumnosGrupo", iD_AlumnosGrupo) :
                new ObjectParameter("ID_AlumnosGrupo", typeof(int));
    
            var alumno_IDParameter = alumno_ID.HasValue ?
                new ObjectParameter("Alumno_ID", alumno_ID) :
                new ObjectParameter("Alumno_ID", typeof(int));
    
            var grupo_IDParameter = grupo_ID.HasValue ?
                new ObjectParameter("Grupo_ID", grupo_ID) :
                new ObjectParameter("Grupo_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_AlumnoGrupo_sel_Result>("sp_AlumnoGrupo_sel", iD_AlumnosGrupoParameter, alumno_IDParameter, grupo_IDParameter);
        }
    
        public virtual int sp_AlumnosGrupo_update(Nullable<int> iD_AlumnosGrupo, Nullable<int> alumno_ID, Nullable<int> grupo_ID)
        {
            var iD_AlumnosGrupoParameter = iD_AlumnosGrupo.HasValue ?
                new ObjectParameter("ID_AlumnosGrupo", iD_AlumnosGrupo) :
                new ObjectParameter("ID_AlumnosGrupo", typeof(int));
    
            var alumno_IDParameter = alumno_ID.HasValue ?
                new ObjectParameter("Alumno_ID", alumno_ID) :
                new ObjectParameter("Alumno_ID", typeof(int));
    
            var grupo_IDParameter = grupo_ID.HasValue ?
                new ObjectParameter("Grupo_ID", grupo_ID) :
                new ObjectParameter("Grupo_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AlumnosGrupo_update", iD_AlumnosGrupoParameter, alumno_IDParameter, grupo_IDParameter);
        }
    
        public virtual int sp_AlumnosGrupos_del(Nullable<int> iD_AlumnosGrupo)
        {
            var iD_AlumnosGrupoParameter = iD_AlumnosGrupo.HasValue ?
                new ObjectParameter("ID_AlumnosGrupo", iD_AlumnosGrupo) :
                new ObjectParameter("ID_AlumnosGrupo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AlumnosGrupos_del", iD_AlumnosGrupoParameter);
        }
    
        public virtual int sp_Alumo_del(Nullable<int> iD_Alumno)
        {
            var iD_AlumnoParameter = iD_Alumno.HasValue ?
                new ObjectParameter("ID_Alumno", iD_Alumno) :
                new ObjectParameter("ID_Alumno", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Alumo_del", iD_AlumnoParameter);
        }
    
        public virtual int sp_Califiacion_update(Nullable<int> iD_Califiacion, Nullable<int> materia_ID, Nullable<int> alumno_ID, Nullable<decimal> calificacion, Nullable<int> semestre, Nullable<int> parcial)
        {
            var iD_CalifiacionParameter = iD_Califiacion.HasValue ?
                new ObjectParameter("ID_Califiacion", iD_Califiacion) :
                new ObjectParameter("ID_Califiacion", typeof(int));
    
            var materia_IDParameter = materia_ID.HasValue ?
                new ObjectParameter("Materia_ID", materia_ID) :
                new ObjectParameter("Materia_ID", typeof(int));
    
            var alumno_IDParameter = alumno_ID.HasValue ?
                new ObjectParameter("Alumno_ID", alumno_ID) :
                new ObjectParameter("Alumno_ID", typeof(int));
    
            var calificacionParameter = calificacion.HasValue ?
                new ObjectParameter("Calificacion", calificacion) :
                new ObjectParameter("Calificacion", typeof(decimal));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("Semestre", semestre) :
                new ObjectParameter("Semestre", typeof(int));
    
            var parcialParameter = parcial.HasValue ?
                new ObjectParameter("Parcial", parcial) :
                new ObjectParameter("Parcial", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Califiacion_update", iD_CalifiacionParameter, materia_IDParameter, alumno_IDParameter, calificacionParameter, semestreParameter, parcialParameter);
        }
    
        public virtual int sp_Calificacion_del(Nullable<int> iD_Calificacion)
        {
            var iD_CalificacionParameter = iD_Calificacion.HasValue ?
                new ObjectParameter("ID_Calificacion", iD_Calificacion) :
                new ObjectParameter("ID_Calificacion", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Calificacion_del", iD_CalificacionParameter);
        }
    
        public virtual ObjectResult<sp_Calificacion_sel_Result> sp_Calificacion_sel(Nullable<int> iD_Calificacion, Nullable<int> alumno_ID, Nullable<int> materia_ID)
        {
            var iD_CalificacionParameter = iD_Calificacion.HasValue ?
                new ObjectParameter("ID_Calificacion", iD_Calificacion) :
                new ObjectParameter("ID_Calificacion", typeof(int));
    
            var alumno_IDParameter = alumno_ID.HasValue ?
                new ObjectParameter("Alumno_ID", alumno_ID) :
                new ObjectParameter("Alumno_ID", typeof(int));
    
            var materia_IDParameter = materia_ID.HasValue ?
                new ObjectParameter("Materia_ID", materia_ID) :
                new ObjectParameter("Materia_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Calificacion_sel_Result>("sp_Calificacion_sel", iD_CalificacionParameter, alumno_IDParameter, materia_IDParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_Grupo_del(Nullable<int> iD_Grupo)
        {
            var iD_GrupoParameter = iD_Grupo.HasValue ?
                new ObjectParameter("ID_Grupo", iD_Grupo) :
                new ObjectParameter("ID_Grupo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Grupo_del", iD_GrupoParameter);
        }
    
        public virtual ObjectResult<sp_Grupo_sel_Result> sp_Grupo_sel(Nullable<int> iD_Grupo, string nombre)
        {
            var iD_GrupoParameter = iD_Grupo.HasValue ?
                new ObjectParameter("ID_Grupo", iD_Grupo) :
                new ObjectParameter("ID_Grupo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Grupo_sel_Result>("sp_Grupo_sel", iD_GrupoParameter, nombreParameter);
        }
    
        public virtual int sp_Grupo_update(Nullable<int> iD_Grupo, string nombre, Nullable<int> horario_ID, Nullable<int> materia_ID, Nullable<int> profesor_ID)
        {
            var iD_GrupoParameter = iD_Grupo.HasValue ?
                new ObjectParameter("ID_Grupo", iD_Grupo) :
                new ObjectParameter("ID_Grupo", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var horario_IDParameter = horario_ID.HasValue ?
                new ObjectParameter("Horario_ID", horario_ID) :
                new ObjectParameter("Horario_ID", typeof(int));
    
            var materia_IDParameter = materia_ID.HasValue ?
                new ObjectParameter("Materia_ID", materia_ID) :
                new ObjectParameter("Materia_ID", typeof(int));
    
            var profesor_IDParameter = profesor_ID.HasValue ?
                new ObjectParameter("Profesor_ID", profesor_ID) :
                new ObjectParameter("Profesor_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Grupo_update", iD_GrupoParameter, nombreParameter, horario_IDParameter, materia_IDParameter, profesor_IDParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_Horario_del(Nullable<int> iD_Horario)
        {
            var iD_HorarioParameter = iD_Horario.HasValue ?
                new ObjectParameter("ID_Horario", iD_Horario) :
                new ObjectParameter("ID_Horario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Horario_del", iD_HorarioParameter);
        }
    
        public virtual int sp_Horario_sel(Nullable<int> iD_Horario)
        {
            var iD_HorarioParameter = iD_Horario.HasValue ?
                new ObjectParameter("ID_Horario", iD_Horario) :
                new ObjectParameter("ID_Horario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Horario_sel", iD_HorarioParameter);
        }
    
        public virtual int sp_Horario_update(Nullable<int> iD_Horario, string horario)
        {
            var iD_HorarioParameter = iD_Horario.HasValue ?
                new ObjectParameter("ID_Horario", iD_Horario) :
                new ObjectParameter("ID_Horario", typeof(int));
    
            var horarioParameter = horario != null ?
                new ObjectParameter("Horario", horario) :
                new ObjectParameter("Horario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Horario_update", iD_HorarioParameter, horarioParameter);
        }
    
        public virtual int sp_InsertarAdmins(string nombre, string apellido, Nullable<System.DateTime> fecha_Nacimiento, Nullable<int> rol_ID)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var fecha_NacimientoParameter = fecha_Nacimiento.HasValue ?
                new ObjectParameter("Fecha_Nacimiento", fecha_Nacimiento) :
                new ObjectParameter("Fecha_Nacimiento", typeof(System.DateTime));
    
            var rol_IDParameter = rol_ID.HasValue ?
                new ObjectParameter("Rol_ID", rol_ID) :
                new ObjectParameter("Rol_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarAdmins", nombreParameter, apellidoParameter, fecha_NacimientoParameter, rol_IDParameter);
        }
    
        public virtual int sp_InsertarAlumGrupo(Nullable<int> alumno_ID, Nullable<int> grupo_ID)
        {
            var alumno_IDParameter = alumno_ID.HasValue ?
                new ObjectParameter("Alumno_ID", alumno_ID) :
                new ObjectParameter("Alumno_ID", typeof(int));
    
            var grupo_IDParameter = grupo_ID.HasValue ?
                new ObjectParameter("Grupo_ID", grupo_ID) :
                new ObjectParameter("Grupo_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarAlumGrupo", alumno_IDParameter, grupo_IDParameter);
        }
    
        public virtual int sp_InsertarAlumno(string nombre, string apellido, Nullable<System.DateTime> fecha_Nacimiento, Nullable<int> rol_ID)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var fecha_NacimientoParameter = fecha_Nacimiento.HasValue ?
                new ObjectParameter("Fecha_Nacimiento", fecha_Nacimiento) :
                new ObjectParameter("Fecha_Nacimiento", typeof(System.DateTime));
    
            var rol_IDParameter = rol_ID.HasValue ?
                new ObjectParameter("Rol_ID", rol_ID) :
                new ObjectParameter("Rol_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarAlumno", nombreParameter, apellidoParameter, fecha_NacimientoParameter, rol_IDParameter);
        }
    
        public virtual int sp_InsertarCalificacion(Nullable<int> aLumno_ID, Nullable<int> materia_ID, Nullable<decimal> calificacion, Nullable<int> semestre, Nullable<int> parcial)
        {
            var aLumno_IDParameter = aLumno_ID.HasValue ?
                new ObjectParameter("ALumno_ID", aLumno_ID) :
                new ObjectParameter("ALumno_ID", typeof(int));
    
            var materia_IDParameter = materia_ID.HasValue ?
                new ObjectParameter("Materia_ID", materia_ID) :
                new ObjectParameter("Materia_ID", typeof(int));
    
            var calificacionParameter = calificacion.HasValue ?
                new ObjectParameter("Calificacion", calificacion) :
                new ObjectParameter("Calificacion", typeof(decimal));
    
            var semestreParameter = semestre.HasValue ?
                new ObjectParameter("Semestre", semestre) :
                new ObjectParameter("Semestre", typeof(int));
    
            var parcialParameter = parcial.HasValue ?
                new ObjectParameter("Parcial", parcial) :
                new ObjectParameter("Parcial", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarCalificacion", aLumno_IDParameter, materia_IDParameter, calificacionParameter, semestreParameter, parcialParameter);
        }
    
        public virtual int sp_InsertarGrupo(string nombre, Nullable<int> profesor_ID, Nullable<int> materia_ID, Nullable<int> horario_ID)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var profesor_IDParameter = profesor_ID.HasValue ?
                new ObjectParameter("Profesor_ID", profesor_ID) :
                new ObjectParameter("Profesor_ID", typeof(int));
    
            var materia_IDParameter = materia_ID.HasValue ?
                new ObjectParameter("Materia_ID", materia_ID) :
                new ObjectParameter("Materia_ID", typeof(int));
    
            var horario_IDParameter = horario_ID.HasValue ?
                new ObjectParameter("Horario_ID", horario_ID) :
                new ObjectParameter("Horario_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarGrupo", nombreParameter, profesor_IDParameter, materia_IDParameter, horario_IDParameter);
        }
    
        public virtual int sp_InsertarHorario(string horario)
        {
            var horarioParameter = horario != null ?
                new ObjectParameter("Horario", horario) :
                new ObjectParameter("Horario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarHorario", horarioParameter);
        }
    
        public virtual int sp_InsertarMateria(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarMateria", nombreParameter);
        }
    
        public virtual int sp_InsertarProfe(string nombre, string apellido, Nullable<int> usuario_ID, Nullable<System.DateTime> fecha_Nacimiento, Nullable<int> rol_ID)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var usuario_IDParameter = usuario_ID.HasValue ?
                new ObjectParameter("Usuario_ID", usuario_ID) :
                new ObjectParameter("Usuario_ID", typeof(int));
    
            var fecha_NacimientoParameter = fecha_Nacimiento.HasValue ?
                new ObjectParameter("Fecha_Nacimiento", fecha_Nacimiento) :
                new ObjectParameter("Fecha_Nacimiento", typeof(System.DateTime));
    
            var rol_IDParameter = rol_ID.HasValue ?
                new ObjectParameter("Rol_ID", rol_ID) :
                new ObjectParameter("Rol_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertarProfe", nombreParameter, apellidoParameter, usuario_IDParameter, fecha_NacimientoParameter, rol_IDParameter);
        }
    
        public virtual ObjectResult<SP_Login_Result> SP_Login(string nombre_Usuario, string contraseña)
        {
            var nombre_UsuarioParameter = nombre_Usuario != null ?
                new ObjectParameter("Nombre_Usuario", nombre_Usuario) :
                new ObjectParameter("Nombre_Usuario", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SP_Login_Result>("SP_Login", nombre_UsuarioParameter, contraseñaParameter);
        }
    
        public virtual int sp_Materia_del(Nullable<int> iD_Materia)
        {
            var iD_MateriaParameter = iD_Materia.HasValue ?
                new ObjectParameter("ID_Materia", iD_Materia) :
                new ObjectParameter("ID_Materia", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Materia_del", iD_MateriaParameter);
        }
    
        public virtual int sp_Materia_update(Nullable<int> iD_Materia, string nombre)
        {
            var iD_MateriaParameter = iD_Materia.HasValue ?
                new ObjectParameter("ID_Materia", iD_Materia) :
                new ObjectParameter("ID_Materia", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Materia_update", iD_MateriaParameter, nombreParameter);
        }
    
        public virtual ObjectResult<sp_Materias_sel_Result> sp_Materias_sel(Nullable<int> iD_Materia, string nombre)
        {
            var iD_MateriaParameter = iD_Materia.HasValue ?
                new ObjectParameter("ID_Materia", iD_Materia) :
                new ObjectParameter("ID_Materia", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Materias_sel_Result>("sp_Materias_sel", iD_MateriaParameter, nombreParameter);
        }
    
        public virtual ObjectResult<sp_MostrarAlumnosGrupos_Result> sp_MostrarAlumnosGrupos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_MostrarAlumnosGrupos_Result>("sp_MostrarAlumnosGrupos");
        }
    
        public virtual ObjectResult<sp_mostrarUsuarios_Result> sp_mostrarUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_mostrarUsuarios_Result>("sp_mostrarUsuarios");
        }
    
        public virtual int sp_Profe_del(Nullable<int> iD_Profesor)
        {
            var iD_ProfesorParameter = iD_Profesor.HasValue ?
                new ObjectParameter("ID_Profesor", iD_Profesor) :
                new ObjectParameter("ID_Profesor", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Profe_del", iD_ProfesorParameter);
        }
    
        public virtual ObjectResult<sp_Profe_sel_Result> sp_Profe_sel(Nullable<int> iD_Profesor, string nombre)
        {
            var iD_ProfesorParameter = iD_Profesor.HasValue ?
                new ObjectParameter("ID_Profesor", iD_Profesor) :
                new ObjectParameter("ID_Profesor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Profe_sel_Result>("sp_Profe_sel", iD_ProfesorParameter, nombreParameter);
        }
    
        public virtual int sp_Profe_update(Nullable<int> iD_Profesor, string nombre, string apellido, Nullable<int> usuario_ID)
        {
            var iD_ProfesorParameter = iD_Profesor.HasValue ?
                new ObjectParameter("ID_Profesor", iD_Profesor) :
                new ObjectParameter("ID_Profesor", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var usuario_IDParameter = usuario_ID.HasValue ?
                new ObjectParameter("Usuario_ID", usuario_ID) :
                new ObjectParameter("Usuario_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Profe_update", iD_ProfesorParameter, nombreParameter, apellidoParameter, usuario_IDParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual ObjectResult<sp_Roles_sel_Result> sp_Roles_sel()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Roles_sel_Result>("sp_Roles_sel");
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int sp_Usuario_del(Nullable<int> iD_Usuario)
        {
            var iD_UsuarioParameter = iD_Usuario.HasValue ?
                new ObjectParameter("ID_Usuario", iD_Usuario) :
                new ObjectParameter("ID_Usuario", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Usuario_del", iD_UsuarioParameter);
        }
    
        public virtual int sp_Usuario_Insert(string nombre_usuario, string contraseña, Nullable<int> rol_ID)
        {
            var nombre_usuarioParameter = nombre_usuario != null ?
                new ObjectParameter("Nombre_usuario", nombre_usuario) :
                new ObjectParameter("Nombre_usuario", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            var rol_IDParameter = rol_ID.HasValue ?
                new ObjectParameter("Rol_ID", rol_ID) :
                new ObjectParameter("Rol_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Usuario_Insert", nombre_usuarioParameter, contraseñaParameter, rol_IDParameter);
        }
    
        public virtual ObjectResult<sp_Usuario_sel_Result> sp_Usuario_sel(Nullable<int> iD_Usuario, string nombre_Usuario)
        {
            var iD_UsuarioParameter = iD_Usuario.HasValue ?
                new ObjectParameter("ID_Usuario", iD_Usuario) :
                new ObjectParameter("ID_Usuario", typeof(int));
    
            var nombre_UsuarioParameter = nombre_Usuario != null ?
                new ObjectParameter("Nombre_Usuario", nombre_Usuario) :
                new ObjectParameter("Nombre_Usuario", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_Usuario_sel_Result>("sp_Usuario_sel", iD_UsuarioParameter, nombre_UsuarioParameter);
        }
    
        public virtual int sp_Usuario_update(Nullable<int> iD_Usuario, string nombre_Usuario, string contraseña, Nullable<int> rol_ID)
        {
            var iD_UsuarioParameter = iD_Usuario.HasValue ?
                new ObjectParameter("ID_Usuario", iD_Usuario) :
                new ObjectParameter("ID_Usuario", typeof(int));
    
            var nombre_UsuarioParameter = nombre_Usuario != null ?
                new ObjectParameter("Nombre_Usuario", nombre_Usuario) :
                new ObjectParameter("Nombre_Usuario", typeof(string));
    
            var contraseñaParameter = contraseña != null ?
                new ObjectParameter("Contraseña", contraseña) :
                new ObjectParameter("Contraseña", typeof(string));
    
            var rol_IDParameter = rol_ID.HasValue ?
                new ObjectParameter("Rol_ID", rol_ID) :
                new ObjectParameter("Rol_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_Usuario_update", iD_UsuarioParameter, nombre_UsuarioParameter, contraseñaParameter, rol_IDParameter);
        }
    }
}
